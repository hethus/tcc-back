generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "../entity_diagram.pdf"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SubjectClass {
  id                  String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                String
  subjectName         String
  subjectId           Int
  semester            String
  teacherId           String                @db.Uuid
  teacher             User                  @relation(fields: [teacherId], references: [id])
  UsersSubjectClasses UsersSubjectClasses[]
}

model User {
  id           String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email        String                @unique
  name         String
  password     String
  token        String?
  registration String                @unique
  userType     String
  createdAt    DateTime              @default(now())
  updatedAt    DateTime              @default(now()) @updatedAt
  newUser      Boolean               @default(true)
  tokenChange  String?
  forms        Form[]
  SubjectClass SubjectClass[]
  takenclasses UsersSubjectClasses[]
}

model UsersSubjectClasses {
  userId         String       @db.Uuid
  subjectClassId String       @db.Uuid
  assignedAt     DateTime     @default(now())
  assignedBy     String
  id             String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  subjectClass   SubjectClass @relation(fields: [subjectClassId], references: [id], onDelete: Cascade)
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Form {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String
  description String
  userId      String     @db.Uuid
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now()) @updatedAt
  random      Boolean
  user        User       @relation(fields: [userId], references: [id])
  questions   Question[]
}

model Question {
  id           String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  singleAnswer Boolean
  title        String
  subtitle     String?
  style        Json?
  image        String?
  order        Float
  type         String
  mandatory    Boolean
  formId       String   @db.Uuid
  options      Json?
  random       Boolean
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
  form         Form     @relation(fields: [formId], references: [id])
}
