// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "../entity_diagram.pdf"
}

model SubjectClass {
  id                  String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                String // nome da turma
  subjectName         String // nome da disciplina
  subjectId           Int
  semester            String
  teacher             User                  @relation(fields: [teacherId], references: [id])
  teacherId           String                @db.Uuid
  UsersSubjectClasses UsersSubjectClasses[]
}

model User {
  id           String                @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email        String                @unique
  name         String
  password     String
  token        String?
  tokenChange  String?
  registration String                @unique
  takenclasses UsersSubjectClasses[]
  forms        Form[]
  userType     String
  newUser      Boolean               @default(true)
  createdAt    DateTime              @default(now())
  updatedAt    DateTime              @default(now()) @updatedAt
  SubjectClass SubjectClass[]
}

model UsersSubjectClasses {
  user           User         @relation(fields: [userId], references: [id])
  userId         String       @db.Uuid // relation scalar field (used in the `@relation` attribute above)
  subjectClass   SubjectClass @relation(fields: [subjectClassId], references: [id])
  subjectClassId String       @db.Uuid // relation scalar field (used in the `@relation` attribute above)
  assignedAt     DateTime     @default(now())
  assignedBy     String

  @@id([userId, subjectClassId])
}

model Form {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String
  description String
  random      Boolean
  questions   Question[]
  user        User       @relation(fields: [userId], references: [id])
  userId      String     @db.Uuid
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @default(now()) @updatedAt
}

model Question {
  id             String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  singleAnswer   Boolean
  title          String
  subtitle       String?
  style          Json?
  random         Boolean
  image          String?
  order          Float
  type           String
  mandatory      Boolean
  form           Form    @relation(fields: [formId], references: [id])
  formId         String  @db.Uuid
  options        Json?
}
